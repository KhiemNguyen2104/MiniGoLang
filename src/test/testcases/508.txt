
            var d = 2
            var arr_2 [3]float = [3]float{1.0, 2.0 + 3.0, 3.3}
            var multiArr [4][2][3]int = [4][d][3]int{{{1, 2 + 1 - 1, 3}, {4, 5, 6}}, {{7, 8, 9}, {10, 11, 12}}, {{13, 14, 15}, {16, 17, 18}}, {{19, 20, 21}, {22, 23, 24}}}
            var x = "abc"
            const idx = 1 - -1 - One()
            var arr [3]int = [3]int{idx, 0X1AF, 0B11}
            const y = arr[1]
            const z = multiArr[1][1][2]

            func print(a string) {
                putString(a)
            }

            func One() int {
                return 1;
            }

            func main() {
                const b = [3]int{10, 11, 12}
                const boo = !false
                
                var ARR = [2][2]int{{1, 2}, {3, 4}}

                var idx int = 1;
                var val int = 2 * 6;
                var y = ARR[0][0]
                ARR[0][1] := 9
                arr[1] := 21
                putIntLn(idx)
                putStringLn(x)
                putIntLn(y)
                putIntLn(z)
                putFloatLn(arr_2[1])
                putIntLn(val)
                putIntLn(arr[1])
                putInt(ARR[0][1])
            }
        